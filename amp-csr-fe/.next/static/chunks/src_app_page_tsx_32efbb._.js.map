{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/toren/trc/git-repos/myProjects/AMPCSR/amp-csr-fe/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Switch from \"@/components/ui/switch\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nconst loginSchema = z.object({\n\tuser_name: z.string(),\n\tpassword: z.string(),\n});\n\nconst registerSchema = z.object({\n\tfirst_name: z.string(),\n\tlast_name: z.string(),\n\tuser_name: z.string(),\n\tpassword: z.string(),\n});\n\nfunction loginForm() {\n\tconst form = useForm<z.infer<typeof loginSchema>>({\n\t\tresolver: zodResolver(loginSchema),\n\t});\n}\n\nfunction registerForm() {\n\tconst form = useForm<z.infer<typeof registerSchema>>({\n\t\tresolver: zodResolver(registerSchema),\n\t});\n}\n\nexport default function LandingPage() {\n\tconst [darkMode, setDarkMode] = useState(window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n\tconst [showLogin, setShowLogin] = useState(true);\n\n\tfunction onLoginSubmit(values: z.infer<typeof loginSchema>) {}\n\n\tfunction onRegisterSubmit(values: z.infer<typeof registerSchema>) {}\n\n\tconst handleCheckChange = (checked: boolean) => {\n\t\tsetDarkMode(checked);\n\t};\n\n\treturn (\n\t\t<div className={`flex-col bg-background min-h-[100vh] min-w-[100vw] ${darkMode ? \"dark\" : \"\"}`}>\n\t\t\t<div className={`flex justify-between`}>\n\t\t\t\t<div className=\"flex max-w-[50%] min-h-fit pl-4 pt-4 items-baseline\">\n\t\t\t\t\t<img src=\"/AMPLogo.png\" alt=\"AMP Logo\" className=\"max-w-[15%] min-w-[15%]\" />\n\t\t\t\t\t<span className=\"text-xl font-bold w-fit text-primary\">Customer Service Portal</span>\n\t\t\t\t</div>\n\t\t\t\t<Switch id=\"darkLightMode\" className=\"self-center mr-8\" checked={darkMode} onCheckedChange={handleCheckChange} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;;AAQA,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,SAAS;;IACR,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA+B;QACjD,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;IACvB;AACD;GAJS;;QACK,iKAAA,CAAA,UAAO;;;AAKrB,SAAS;;IACR,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAkC;QACpD,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;IACvB;AACD;IAJS;;QACK,iKAAA,CAAA,UAAO;;;AAKN,SAAS;;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,UAAU,CAAC,gCAAgC,OAAO;IAClG,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,SAAS,cAAc,MAAmC,GAAG;IAE7D,SAAS,iBAAiB,MAAsC,GAAG;IAEnE,MAAM,oBAAoB,CAAC;QAC1B,YAAY;IACb;IAEA,qBACC,6LAAC;QAAI,WAAW,CAAC,mDAAmD,EAAE,WAAW,SAAS,IAAI;kBAC7F,cAAA,6LAAC;YAAI,WAAW,CAAC,oBAAoB,CAAC;;8BACrC,6LAAC;oBAAI,WAAU;;sCACd,6LAAC;4BAAI,KAAI;4BAAe,KAAI;4BAAW,WAAU;;;;;;sCACjD,6LAAC;4BAAK,WAAU;sCAAuC;;;;;;;;;;;;8BAExD,6LAAC;oBAAO,IAAG;oBAAgB,WAAU;oBAAmB,SAAS;oBAAU,iBAAiB;;;;;;;;;;;;;;;;;AAIhG;IAvBwB;KAAA"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}